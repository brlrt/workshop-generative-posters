
package org.openrndr.workshop.toolkit.typography
import org.openrndr.resourceUrl

/*




                      THIS FILE IS AUTOGENERATED BY GenerateFontAPI.kt, DO NOT EDIT MANUALLY



*/

object Fonts {
    val Astloch_Bold = resourceUrl("/fonts/Astloch/Astloch-Bold.ttf")
	val Astloch_Regular = resourceUrl("/fonts/Astloch/Astloch-Regular.ttf")
	val Hanken_Light = resourceUrl("/fonts/Hanken/Hanken-Light.ttf")
	val Hanken_Book = resourceUrl("/fonts/Hanken/Hanken-Book.ttf")
	val UnifrakturMaguntia = resourceUrl("/fonts/UnifrakturMaguntia/UnifrakturMaguntia.ttf")
	val Pecita = resourceUrl("/fonts/Pecita/Pecita.otf")
	val InknutAntiqua_Bold = resourceUrl("/fonts/InknutAntiqua/InknutAntiqua-Bold.ttf")
	val InknutAntiqua_Regular = resourceUrl("/fonts/InknutAntiqua/InknutAntiqua-Regular.ttf")
	val InknutAntiqua_SemiBold = resourceUrl("/fonts/InknutAntiqua/InknutAntiqua-SemiBold.ttf")
	val InknutAntiqua_Light = resourceUrl("/fonts/InknutAntiqua/InknutAntiqua-Light.ttf")
	val InknutAntiqua_Black = resourceUrl("/fonts/InknutAntiqua/InknutAntiqua-Black.ttf")
	val InknutAntiqua_Medium = resourceUrl("/fonts/InknutAntiqua/InknutAntiqua-Medium.ttf")
	val InknutAntiqua_ExtraBold = resourceUrl("/fonts/InknutAntiqua/InknutAntiqua-ExtraBold.ttf")
	val Autopia_Bold = resourceUrl("/fonts/Autopia/Autopia-Bold.ttf")
	val Autopia_Regular = resourceUrl("/fonts/Autopia/Autopia-Regular.ttf")
	val Autopia_Bold_Italic = resourceUrl("/fonts/Autopia/Autopia-Bold-Italic.ttf")
	val Autopia_Italic = resourceUrl("/fonts/Autopia/Autopia-Italic.ttf")
	val Iosevka_term_regular = resourceUrl("/fonts/Iosevka/iosevka-term-regular.ttf")
	val Iosevka_term_medium = resourceUrl("/fonts/Iosevka/iosevka-term-medium.ttf")
	val Iosevka_term_bold = resourceUrl("/fonts/Iosevka/iosevka-term-bold.ttf")
	val Iosevka_term_light = resourceUrl("/fonts/Iosevka/iosevka-term-light.ttf")
	val Iosevka_term_lightitalic = resourceUrl("/fonts/Iosevka/iosevka-term-lightitalic.ttf")
	val Iosevka_term_heavyitalic = resourceUrl("/fonts/Iosevka/iosevka-term-heavyitalic.ttf")
	val Iosevka_term_italic = resourceUrl("/fonts/Iosevka/iosevka-term-italic.ttf")
	val Iosevka_term_bolditalic = resourceUrl("/fonts/Iosevka/iosevka-term-bolditalic.ttf")
	val Iosevka_term_mediumitalic = resourceUrl("/fonts/Iosevka/iosevka-term-mediumitalic.ttf")
	val Iosevka_term_heavy = resourceUrl("/fonts/Iosevka/iosevka-term-heavy.ttf")
	val IBMPlexMono_TextItalic = resourceUrl("/fonts/IBMPlexMono/IBMPlexMono-TextItalic.ttf")
	val IBMPlexMono_Thin = resourceUrl("/fonts/IBMPlexMono/IBMPlexMono-Thin.ttf")
	val IBMPlexMono_Bold = resourceUrl("/fonts/IBMPlexMono/IBMPlexMono-Bold.ttf")
	val IBMPlexMono_MediumItalic = resourceUrl("/fonts/IBMPlexMono/IBMPlexMono-MediumItalic.ttf")
	val IBMPlexMono_BoldItalic = resourceUrl("/fonts/IBMPlexMono/IBMPlexMono-BoldItalic.ttf")
	val IBMPlexMono_Medium = resourceUrl("/fonts/IBMPlexMono/IBMPlexMono-Medium.ttf")
	val IBMPlexMono_ExtraLight = resourceUrl("/fonts/IBMPlexMono/IBMPlexMono-ExtraLight.ttf")
	val IBMPlexMono_ExtraLightItalic = resourceUrl("/fonts/IBMPlexMono/IBMPlexMono-ExtraLightItalic.ttf")
	val IBMPlexMono_ThinItalic = resourceUrl("/fonts/IBMPlexMono/IBMPlexMono-ThinItalic.ttf")
	val IBMPlexMono_Regular = resourceUrl("/fonts/IBMPlexMono/IBMPlexMono-Regular.ttf")
	val IBMPlexMono_Light = resourceUrl("/fonts/IBMPlexMono/IBMPlexMono-Light.ttf")
	val IBMPlexMono_Italic = resourceUrl("/fonts/IBMPlexMono/IBMPlexMono-Italic.ttf")
	val IBMPlexMono_Text = resourceUrl("/fonts/IBMPlexMono/IBMPlexMono-Text.ttf")
	val IBMPlexMono_SemiBold = resourceUrl("/fonts/IBMPlexMono/IBMPlexMono-SemiBold.ttf")
	val IBMPlexMono_SemiBoldItalic = resourceUrl("/fonts/IBMPlexMono/IBMPlexMono-SemiBoldItalic.ttf")
	val IBMPlexMono_LightItalic = resourceUrl("/fonts/IBMPlexMono/IBMPlexMono-LightItalic.ttf")
	val Rumeur = resourceUrl("/fonts/Rumeur/rumeur.otf")
	val Rubik_MediumItalic = resourceUrl("/fonts/Rubik/Rubik-MediumItalic.ttf")
	val Rubik_Bold = resourceUrl("/fonts/Rubik/Rubik-Bold.ttf")
	val Rubik_Light = resourceUrl("/fonts/Rubik/Rubik-Light.ttf")
	val Rubik_Medium = resourceUrl("/fonts/Rubik/Rubik-Medium.ttf")
	val Rubik_Black = resourceUrl("/fonts/Rubik/Rubik-Black.ttf")
	val Rubik_Italic = resourceUrl("/fonts/Rubik/Rubik-Italic.ttf")
	val Rubik_LightItalic = resourceUrl("/fonts/Rubik/Rubik-LightItalic.ttf")
	val Rubik_BlackItalic = resourceUrl("/fonts/Rubik/Rubik-BlackItalic.ttf")
	val Rubik_Regular = resourceUrl("/fonts/Rubik/Rubik-Regular.ttf")
	val Rubik_BoldItalic = resourceUrl("/fonts/Rubik/Rubik-BoldItalic.ttf")
	val _3270SemiNarrow = resourceUrl("/fonts/_3270/3270SemiNarrow.ttf")
	val _3270Narrow = resourceUrl("/fonts/_3270/3270Narrow.ttf")
	val _3270Medium = resourceUrl("/fonts/_3270/3270Medium.ttf")
	val SpaceMono_Regular = resourceUrl("/fonts/SpaceMono/SpaceMono-Regular.ttf")
	val SpaceMono_BoldItalic = resourceUrl("/fonts/SpaceMono/SpaceMono-BoldItalic.ttf")
	val SpaceMono_Italic = resourceUrl("/fonts/SpaceMono/SpaceMono-Italic.ttf")
	val SpaceMono_Bold = resourceUrl("/fonts/SpaceMono/SpaceMono-Bold.ttf")
	val Syne_Extra = resourceUrl("/fonts/Syne/Syne-Extra.ttf")
	val Syne_Italic = resourceUrl("/fonts/Syne/Syne-Italic.ttf")
	val Syne_Regular = resourceUrl("/fonts/Syne/Syne-Regular.ttf")
	val Syne_Bold = resourceUrl("/fonts/Syne/Syne-Bold.ttf")
	val Syne_Mono = resourceUrl("/fonts/Syne/Syne-Mono.ttf")
	val Meyrin = resourceUrl("/fonts/Meyrin/Meyrin.ttf")
	val Jost_500_MediumItalic = resourceUrl("/fonts/Jost/Jost-500-MediumItalic.ttf")
	val Jost_300_LightItalic = resourceUrl("/fonts/Jost/Jost-300-LightItalic.ttf")
	val Jost_500_Medium = resourceUrl("/fonts/Jost/Jost-500-Medium.ttf")
	val Jost_600_Semi = resourceUrl("/fonts/Jost/Jost-600-Semi.ttf")
	val Jost_300_Light = resourceUrl("/fonts/Jost/Jost-300-Light.ttf")
	val Jost_700_Bold = resourceUrl("/fonts/Jost/Jost-700-Bold.ttf")
	val Jost_400_BookItalic = resourceUrl("/fonts/Jost/Jost-400-BookItalic.ttf")
	val Jost_800_Heavy = resourceUrl("/fonts/Jost/Jost-800-Heavy.ttf")
	val Jost_400_Book = resourceUrl("/fonts/Jost/Jost-400-Book.ttf")
	val Jost_900_Black = resourceUrl("/fonts/Jost/Jost-900-Black.ttf")
	val Jost_800_HeavyItalic = resourceUrl("/fonts/Jost/Jost-800-HeavyItalic.ttf")
	val Jost_700_BoldItalic = resourceUrl("/fonts/Jost/Jost-700-BoldItalic.ttf")
	val Jost_900_BlackItalic = resourceUrl("/fonts/Jost/Jost-900-BlackItalic.ttf")
	val Jost_600_SemiItalic = resourceUrl("/fonts/Jost/Jost-600-SemiItalic.ttf")

    val availableFonts = listOf(
        Astloch_Bold,
		Astloch_Regular,
		Hanken_Light,
		Hanken_Book,
		UnifrakturMaguntia,
		Pecita,
		InknutAntiqua_Bold,
		InknutAntiqua_Regular,
		InknutAntiqua_SemiBold,
		InknutAntiqua_Light,
		InknutAntiqua_Black,
		InknutAntiqua_Medium,
		InknutAntiqua_ExtraBold,
		Autopia_Bold,
		Autopia_Regular,
		Autopia_Bold_Italic,
		Autopia_Italic,
		Iosevka_term_regular,
		Iosevka_term_medium,
		Iosevka_term_bold,
		Iosevka_term_light,
		Iosevka_term_lightitalic,
		Iosevka_term_heavyitalic,
		Iosevka_term_italic,
		Iosevka_term_bolditalic,
		Iosevka_term_mediumitalic,
		Iosevka_term_heavy,
		IBMPlexMono_TextItalic,
		IBMPlexMono_Thin,
		IBMPlexMono_Bold,
		IBMPlexMono_MediumItalic,
		IBMPlexMono_BoldItalic,
		IBMPlexMono_Medium,
		IBMPlexMono_ExtraLight,
		IBMPlexMono_ExtraLightItalic,
		IBMPlexMono_ThinItalic,
		IBMPlexMono_Regular,
		IBMPlexMono_Light,
		IBMPlexMono_Italic,
		IBMPlexMono_Text,
		IBMPlexMono_SemiBold,
		IBMPlexMono_SemiBoldItalic,
		IBMPlexMono_LightItalic,
		Rumeur,
		Rubik_MediumItalic,
		Rubik_Bold,
		Rubik_Light,
		Rubik_Medium,
		Rubik_Black,
		Rubik_Italic,
		Rubik_LightItalic,
		Rubik_BlackItalic,
		Rubik_Regular,
		Rubik_BoldItalic,
		_3270SemiNarrow,
		_3270Narrow,
		_3270Medium,
		SpaceMono_Regular,
		SpaceMono_BoldItalic,
		SpaceMono_Italic,
		SpaceMono_Bold,
		Syne_Extra,
		Syne_Italic,
		Syne_Regular,
		Syne_Bold,
		Syne_Mono,
		Meyrin,
		Jost_500_MediumItalic,
		Jost_300_LightItalic,
		Jost_500_Medium,
		Jost_600_Semi,
		Jost_300_Light,
		Jost_700_Bold,
		Jost_400_BookItalic,
		Jost_800_Heavy,
		Jost_400_Book,
		Jost_900_Black,
		Jost_800_HeavyItalic,
		Jost_700_BoldItalic,
		Jost_900_BlackItalic,
		Jost_600_SemiItalic
    )
}
        