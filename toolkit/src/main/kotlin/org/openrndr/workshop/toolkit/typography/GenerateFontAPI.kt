package org.openrndr.workshop.toolkit.typography

import org.openrndr.Application
import java.io.File
import java.nio.file.Paths

val sentence = "Pack my box with five dozen liquor jugs."

internal fun main(args: Array<String>) {
    val outputPath = Paths.get("toolkit/src/main/kotlin/org/openrndr/workshop/toolkit/typography/Fonts.kt").toAbsolutePath().toString();

    val fontResourcesRoot = File(
        Application::class.java.getResource("/fonts").path
    )

    val fonts = fontResourcesRoot.listFiles().flatMap { fontDir ->
        fontDir.listFiles().filter {
            listOf("ttf", "otf").contains(it.extension)
        }.map {
            val propName = it.nameWithoutExtension.capitalize().replace("-", "_").let {
                if (!it[0].isLetter()) {
                    "_$it"
                } else {
                    it
                }
            }

            val prop = """val $propName = resourceUrl("/fonts/${fontDir.name}/${it.name}")"""
            Pair(prop, propName)
        }
    }

    val fontProps = fonts.map { it.first }.joinToString("\n\t")
    val availableFonts = fonts.map { it.second }.joinToString(",\n\t\t")

    val result = """
package org.openrndr.workshop.toolkit.typography
import org.openrndr.resourceUrl

/*




                      THIS FILE IS AUTOGENERATED BY GenerateFontAPI.kt, DO NOT EDIT MANUALLY



*/

object Fonts {
    $fontProps

    val availableFonts = listOf(
        $availableFonts
    )
}
        """
    println(result)
    File(outputPath).writeText(result)

}
